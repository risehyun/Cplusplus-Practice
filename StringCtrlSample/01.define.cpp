#include <iostream>

using namespace std;

// define으로 상수나 매크로를 자유롭게 정의 할 수 있다.
// 이렇게 정의된 값은 호출시에 단순 대체되며 메모리를 차지하지 않아 속도면에서 이점이 있다.
// 자주 쓰이는 데이터 값이 있다면 이것을 그냥 함수 매개로 값만 달랑 넘기기보다
// 이렇게 상수로 만들듯이 매크로로 정의하면 매크로에 정의된 숫자값만 바꾸면 되기 때문에 디버깅도 더 쉽고 실수가 일어날 일도 적어진다. 
// 또한 단순히 값을 리턴하는 등의 짧은 함수는 실행시간보다 호출시간이 더 오래걸려 비효율적이기 때문에 함수 오버헤드가 없는
// 디파인이나 인라인을 사용해서 시간을 줄이는 방법을 사용할 수 있다.
// 다만 매크로의 경우 디버깅이 되지 않고 복잡한 함수를 적기엔 작성 방식이 귀찮기 때문에 상황에 따라 인라인과 디파인중에 하나를 선택하면 된다.

#define PI 3.14159
#define loop(x,n) for(int x = 0; x < n; x++)
int main() {
	cout << PI << '\n';
	int sum = 0;

	// 위에 정의한 매크로에 의해 loop함수는 for문과 같이 동작한다.
	loop(i, 20) 
	{
		sum += i;
	}

	cout << sum << '\n';
	return 0;
}
